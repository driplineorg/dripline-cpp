name: Run Tests

on:
  push:
    branches: [ '*.build' ]
  pull_request:

  workflow_dispatch:

jobs:

  test_docker:

    runs-on: ubuntu-20.04

    steps:

      - name: Checkout the repo 
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build and run
        run: |
          cd /home/runner/work/dripline-cpp/dripline-cpp
          docker build \
            --build-arg img_repo=python \
            --build-arg img_tag=3.8.7-buster \
            --build-arg build_type=Debug \
            --build-arg build_examples=TRUE \
            --build-arg enable_testing=TRUE \
            --tag driplineorg/dripline-cpp:test \
            .
          docker run driplineorg/dripline-cpp:test /usr/local/build/testing/run_tests

  test_builds:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]

    steps:

      - name: Checkout the repo 
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install dependencies -- Mac
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install \
            boost \
            rabbitmq-c \
            rapidjson \
            yaml-cpp

      - name: Install dependencies -- Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y \
            libboost-all-dev \
            librabbitmq-dev \
            rapidjson-dev \
            libyaml-cpp-dev
            
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake -DScarab_BUILD_PYTHON=FALSE -DDripline_ENABLE_TESTING=TRUE .. 

      - name: Build
        run: |
          cd build
          make -j2 install

      - name: Run tests
        run: |
          cd build/testing
          ./run_tests
          