name: Run Tests

on:
  push:
    branches: [ main, develop, '*.build', feature/ghactions ]
  pull_request:
    branches: '*'

  workflow_dispatch:

jobs:

  macos:
    runs-on: macos-10.15
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          brew install \
            rabbitmq-c \
            rapidjson \
            yaml-cpp
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake .. -DDripline_ENABLE_TESTING=TRUE
      - name: Build
        run: |
          cd build
          make -j2 install
      - name: Run tests
        run: |
          cd build/testing
          ./run_tests
          
  linux_gcc:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y \
            build-essential \
            cmake \
            libboost-all-dev \
            librabbitmq-dev \
            rapidjson-dev \
            libyaml-cpp-dev
      - name: Configure
        run: |
          export CC=gcc && export CXX=g++
          mkdir build
          cd build
          cmake .. -DScarab_BUILD_PYTHON=FALSE -DDripline_ENABLE_TESTING=TRUE -DCMAKE_CXX_FLAGS=-pthread
      - name: Build
        run: |
          cd build
          make -j2 install
      - name: Run tests
        run: |
          cd build/testing
          ./run_tests

  linux_clang:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y \
            build-essential \
            clang \
            cmake \
            libboost-all-dev \
            librabbitmq-dev \
            rapidjson-dev \
            libyaml-cpp-dev
      - name: Configure
        run: |
          export CC=clang && export CXX=clang++
          mkdir build
          cd build
          cmake .. -DScarab_BUILD_PYTHON=FALSE -DDripline_ENABLE_TESTING=TRUE -DCMAKE_CXX_FLAGS=-pthread
      - name: Build
        run: |
          cd build
          make -j2 install
      - name: Run tests
        run: |
          cd build/testing
          ./run_tests
